Listas 4.2

Se dispone de una lista simplemente encadenada de números enteros, diseñar un algoritmo que a partir de ella genere otra lista conteniendo los nodos cuyos datos terminan en cero; dichos elementos, deberán ser eliminados de la lista original. Se asume que la lista está cargada, y que el algoritmo recibe como parámetro de entrada la dirección del primer elemento.

ACCION 4.2 (PRIM: puntero a NODO) ES

Ambiente
NODO=registro
	Dato:entero
	Prox:puntero a NODO
FR

p,q,prim2,ant: puntero a NODO




PROCESO
<>
P:=PRIM
SI  (p = nil) entonces
	esc("error lista vacia")
SINO
	MIENTRAS (P<>nill) hacer
		ant:=p
		Si (*p.Dato MOD 10)=0 entonces //Mirar el 4.2 Complementarios, se puede hacer el mismo algoritmo sin disponer los nodos
			Nuevo(q)
			*q.Dato:=*p.Dato

			Si PRIM2=nill entonces //Como es una pila, simplemente puedes hacer *q.prox:=PRIM2 y PRIM2:=q, porque la primera vez PRIM2 apunta a NILL	
				PRIM2:=q
				*q.Prox:=nill
			SINO
				*q.Prox:=PRIM2
				PRIM2:=q
			FIN SI

			Si p=PRIM entonces 
				PRIM:=*p.Prox
			SINO
				*ant.Prox:=*p.Prox
			FIN SI
			
			Disponer(p)
			
			p:=*p.Prox

		SINO
			p:=*p.Prox
		FIN SI
		//p:=*p.prox se repite dos veces, se puede colocar afuera del si
	FIN MIENTRAS
FIN SI
FINACCION



